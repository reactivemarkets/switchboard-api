// Copyright Â© 2022 Reactive Markets. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// See https://developer.reactivemarkets.com for documentation.

include "Enum.fbs";

namespace Switchboard;

/// The Quote Request message is sent by the taker to request a new quote
/// for the session.
table QuoteRequest {
    /// Trading account.
    account: string (required);
    /// Quote request identifier assigned by the client. (Max 48 characters).
    req_id: string (required);
    /// Instrument symbol.
    symbol: string (required);
    /// Exchange or venue symbol.
    venue: string (required);
    /// Tenor symbol, for swaps refers to the near leg.
    tenor: string;
    /// Security Type. defaults to Spot.
    security_type: SecurityType = Spot;
    /// Quote request duration in milliseconds.
    expire_time: int;
    /// Quote side. If none, this is a two-way request.
    side: Side;
    /// Quote currency.
    ccy: string;
    /// Quote quantity. MUST be greater than zero.
    qty: double;
    /// The fixing date in YYYYMMDD format.
    fixing_date: int;
    /// Swaps only, refers to the far leg.
    far_tenor: string;
    /// Swaps only, far leg quantity.
    far_qty: double;
    /// Swaps only, far leg fixing date in YYYYMMDD format.
    far_fixing_date: int;
    /// A list of quote venues. Ignored if venue is not AGG.
    venue_filter: [string];
}
